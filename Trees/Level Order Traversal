
https://leetcode.com/problems/binary-tree-level-order-traversal/

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL){
            return ans;
        }
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int n = q.size();
            vector<int> v;
            //We will fill up the stack at every level so using this loop we can easily store our nodes at a particular level into our vector.
            for(int i=0;i<n;i++){
                TreeNode *temp = q.front();
                q.pop();
                v.push_back(temp->val);
                if(temp->left!=NULL){
                    q.push(temp->left);
                }
                if(temp->right!=NULL){
                    q.push(temp->right);
                }
              }
            ans.push_back(v);
        }
        return ans;
    }
};
